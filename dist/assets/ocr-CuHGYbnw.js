import{g as getDefaultExportFromCjs}from"./vendor-Brt_-nTE.js";function _mergeNamespaces(n,m){for(var i=0;i<m.length;i++){const e=m[i];if(typeof e!="string"&&!Array.isArray(e)){for(const k in e)if(k!=="default"&&!(k in n)){const d=Object.getOwnPropertyDescriptor(e,k);d&&Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:()=>e[k]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}var runtime={exports:{}};(function(module){var runtime2=function(exports){var Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},undefined$1,$Symbol=typeof Symbol=="function"?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch{define=function(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}exports.wrap=wrap;function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}var GenStateSuspendedStart="suspendedStart",GenStateSuspendedYield="suspendedYield",GenStateExecuting="executing",GenStateCompleted="completed",ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,function(){return this});var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction");function defineIteratorMethods(prototype){["next","throw","return"].forEach(function(method){define(prototype,method,function(arg){return this._invoke(method,arg)})})}exports.isGeneratorFunction=function(genFun){var ctor=typeof genFun=="function"&&genFun.constructor;return ctor?ctor===GeneratorFunction||(ctor.displayName||ctor.name)==="GeneratorFunction":!1},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}};function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if(record.type==="throw")reject(record.arg);else{var result=record.arg,value=result.value;return value&&typeof value=="object"&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then(function(value2){invoke("next",value2,resolve,reject)},function(err){invoke("throw",err,resolve,reject)}):PromiseImpl.resolve(value).then(function(unwrapped){result.value=unwrapped,resolve(result)},function(error){return invoke("throw",error,resolve,reject)})}}var previousPromise;function enqueue(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl(function(resolve,reject){invoke(method,arg,resolve,reject)})}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}defineProperty(this,"_invoke",{value:enqueue})}defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,function(){return this}),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){PromiseImpl===void 0&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then(function(result){return result.done?result.value:iter.next()})};function makeInvokeMethod(innerFn,self,context){var state=GenStateSuspendedStart;return function(method,arg){if(state===GenStateExecuting)throw new Error("Generator is already running");if(state===GenStateCompleted){if(method==="throw")throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if(context.method==="next")context.sent=context._sent=context.arg;else if(context.method==="throw"){if(state===GenStateSuspendedStart)throw state=GenStateCompleted,context.arg;context.dispatchException(context.arg)}else context.method==="return"&&context.abrupt("return",context.arg);state=GenStateExecuting;var record=tryCatch(innerFn,self,context);if(record.type==="normal"){if(state=context.done?GenStateCompleted:GenStateSuspendedYield,record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}else record.type==="throw"&&(state=GenStateCompleted,context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(method===undefined$1)return context.delegate=null,methodName==="throw"&&delegate.iterator.return&&(context.method="return",context.arg=undefined$1,maybeInvokeDelegate(delegate,context),context.method==="throw")||methodName!=="return"&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if(record.type==="throw")return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;if(!info)return context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel;if(info.done)context[delegate.resultName]=info.value,context.next=delegate.nextLoc,context.method!=="return"&&(context.method="next",context.arg=undefined$1);else return info;return context.delegate=null,ContinueSentinel}defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,function(){return this}),define(Gp,"toString",function(){return"[object Generator]"});function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key2=keys.pop();if(key2 in object)return next.value=key2,next.done=!1,next}return next.done=!0,next}};function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if(typeof iterable.next=="function")return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next2(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next2.value=iterable[i],next2.done=!1,next2;return next2.value=undefined$1,next2.done=!0,next2};return next.next=next}}return{next:doneResult}}exports.values=values;function doneResult(){return{value:undefined$1,done:!0}}return Context.prototype={constructor:Context,reset:function(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=undefined$1,this.done=!1,this.delegate=null,this.method="next",this.arg=undefined$1,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)name.charAt(0)==="t"&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=undefined$1)},stop:function(){this.done=!0;var rootEntry=this.tryEntries[0],rootRecord=rootEntry.completion;if(rootRecord.type==="throw")throw rootRecord.arg;return this.rval},dispatchException:function(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=undefined$1),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if(entry.tryLoc==="root")return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else if(hasFinally){if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else throw new Error("try statement without catch or finally")}}},abrupt:function(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&(type==="break"||type==="continue")&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function(record,afterLoc){if(record.type==="throw")throw record.arg;return record.type==="break"||record.type==="continue"?this.next=record.arg:record.type==="return"?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):record.type==="normal"&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(record.type==="throw"){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName,nextLoc},this.method==="next"&&(this.arg=undefined$1),ContinueSentinel}},exports}(module.exports);try{regeneratorRuntime=runtime2}catch{typeof globalThis=="object"?globalThis.regeneratorRuntime=runtime2:Function("r","regeneratorRuntime = r")(runtime2)}})(runtime);var getId$3=(prefix,cnt)=>`${prefix}-${cnt}-${Math.random().toString(16).slice(3,8)}`;const getId$2=getId$3;let jobCounter=0;var createJob$2=({id:_id,action,payload={}})=>{let id=_id;return typeof id>"u"&&(id=getId$2("Job",jobCounter),jobCounter+=1),{id,action,payload}},log$2={};let logging=!1;log$2.logging=logging;log$2.setLogging=_logging=>{logging=_logging};log$2.log=(...args)=>logging?console.log.apply(void 0,args):null;const createJob$1=createJob$2,{log:log$1}=log$2,getId$1=getId$3;let schedulerCounter=0;var createScheduler$1=()=>{const id=getId$1("Scheduler",schedulerCounter),workers={},runningWorkers={};let jobQueue=[];schedulerCounter+=1;const getQueueLen=()=>jobQueue.length,getNumWorkers=()=>Object.keys(workers).length,dequeue=()=>{if(jobQueue.length!==0){const wIds=Object.keys(workers);for(let i=0;i<wIds.length;i+=1)if(typeof runningWorkers[wIds[i]]>"u"){jobQueue[0](workers[wIds[i]]);break}}},queue=(action,payload)=>new Promise((resolve,reject)=>{const job=createJob$1({action,payload});jobQueue.push(async w=>{jobQueue.shift(),runningWorkers[w.id]=job;try{resolve(await w[action].apply(void 0,[...payload,job.id]))}catch(err){reject(err)}finally{delete runningWorkers[w.id],dequeue()}}),log$1(`[${id}]: Add ${job.id} to JobQueue`),log$1(`[${id}]: JobQueue length=${jobQueue.length}`),dequeue()});return{addWorker:w=>(workers[w.id]=w,log$1(`[${id}]: Add ${w.id}`),log$1(`[${id}]: Number of workers=${getNumWorkers()}`),dequeue(),w.id),addJob:async(action,...payload)=>{if(getNumWorkers()===0)throw Error(`[${id}]: You need to have at least one worker before adding jobs`);return queue(action,payload)},terminate:async()=>{Object.keys(workers).forEach(async wid=>{await workers[wid].terminate()}),jobQueue=[]},getQueueLen,getNumWorkers}};function commonjsRequire(path){throw new Error('Could not dynamically require "'+path+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var getEnvironment=key=>{const env={};return typeof WorkerGlobalScope<"u"?env.type="webworker":typeof document=="object"?env.type="browser":typeof process=="object"&&typeof commonjsRequire=="function"&&(env.type="node"),typeof key>"u"?env:env[key]};const isBrowser=getEnvironment("type")==="browser",resolveURL=isBrowser?s=>new URL(s,window.location.href).href:s=>s;var resolvePaths$1=options=>{const opts={...options};return["corePath","workerPath","langPath"].forEach(key=>{options[key]&&(opts[key]=resolveURL(opts[key]))}),opts},OEM$2={TESSERACT_ONLY:0,LSTM_ONLY:1,TESSERACT_LSTM_COMBINED:2,DEFAULT:3};const version$1="6.0.1",require$$0={version:version$1};var defaultOptions$3={workerBlobURL:!0,logger:()=>{}};const version=require$$0.version,defaultOptions$2=defaultOptions$3;var defaultOptions_1={...defaultOptions$2,workerPath:`https://cdn.jsdelivr.net/npm/tesseract.js@v${version}/dist/worker.min.js`},spawnWorker$2=({workerPath,workerBlobURL})=>{let worker;if(Blob&&URL&&workerBlobURL){const blob=new Blob([`importScripts("${workerPath}");`],{type:"application/javascript"});worker=new Worker(URL.createObjectURL(blob))}else worker=new Worker(workerPath);return worker},terminateWorker$2=worker=>{worker.terminate()},onMessage$2=(worker,handler)=>{worker.onmessage=({data})=>{handler(data)}},send$2=async(worker,packet)=>{worker.postMessage(packet)};const readFromBlobOrFile=blob=>new Promise((resolve,reject)=>{const fileReader=new FileReader;fileReader.onload=()=>{resolve(fileReader.result)},fileReader.onerror=({target:{error:{code}}})=>{reject(Error(`File could not be read! Code=${code}`))},fileReader.readAsArrayBuffer(blob)}),loadImage$2=async image=>{let data=image;if(typeof image>"u")return"undefined";if(typeof image=="string")/data:image\/([a-zA-Z]*);base64,([^"]*)/.test(image)?data=atob(image.split(",")[1]).split("").map(c=>c.charCodeAt(0)):data=await(await fetch(image)).arrayBuffer();else if(typeof HTMLElement<"u"&&image instanceof HTMLElement)image.tagName==="IMG"&&(data=await loadImage$2(image.src)),image.tagName==="VIDEO"&&(data=await loadImage$2(image.poster)),image.tagName==="CANVAS"&&await new Promise(resolve=>{image.toBlob(async blob=>{data=await readFromBlobOrFile(blob),resolve()})});else if(typeof OffscreenCanvas<"u"&&image instanceof OffscreenCanvas){const blob=await image.convertToBlob();data=await readFromBlobOrFile(blob)}else(image instanceof File||image instanceof Blob)&&(data=await readFromBlobOrFile(image));return new Uint8Array(data)};var loadImage_1=loadImage$2;const defaultOptions$1=defaultOptions_1,spawnWorker$1=spawnWorker$2,terminateWorker$1=terminateWorker$2,onMessage$1=onMessage$2,send$1=send$2,loadImage$1=loadImage_1;var browser={defaultOptions:defaultOptions$1,spawnWorker:spawnWorker$1,terminateWorker:terminateWorker$1,onMessage:onMessage$1,send:send$1,loadImage:loadImage$1};const resolvePaths=resolvePaths$1,createJob=createJob$2,{log}=log$2,getId=getId$3,OEM$1=OEM$2,{defaultOptions,spawnWorker,terminateWorker,onMessage,loadImage,send}=browser;let workerCounter=0;var createWorker$2=async(langs="eng",oem=OEM$1.LSTM_ONLY,_options={},config={})=>{const id=getId("Worker",workerCounter),{logger,errorHandler,...options}=resolvePaths({...defaultOptions,..._options}),promises={},currentLangs=typeof langs=="string"?langs.split("+"):langs;let currentOem=oem,currentConfig=config;const lstmOnlyCore=[OEM$1.DEFAULT,OEM$1.LSTM_ONLY].includes(oem)&&!options.legacyCore;let workerResReject,workerResResolve;const workerRes=new Promise((resolve,reject)=>{workerResResolve=resolve,workerResReject=reject}),workerError=event=>{workerResReject(event.message)};let worker=spawnWorker(options);worker.onerror=workerError,workerCounter+=1;const startJob=({id:jobId,action,payload})=>new Promise((resolve,reject)=>{log(`[${id}]: Start ${jobId}, action=${action}`);const promiseId=`${action}-${jobId}`;promises[promiseId]={resolve,reject},send(worker,{workerId:id,jobId,action,payload})}),load=()=>console.warn("`load` is depreciated and should be removed from code (workers now come pre-loaded)"),loadInternal=jobId=>startJob(createJob({id:jobId,action:"load",payload:{options:{lstmOnly:lstmOnlyCore,corePath:options.corePath,logging:options.logging}}})),writeText=(path,text,jobId)=>startJob(createJob({id:jobId,action:"FS",payload:{method:"writeFile",args:[path,text]}})),readText=(path,jobId)=>startJob(createJob({id:jobId,action:"FS",payload:{method:"readFile",args:[path,{encoding:"utf8"}]}})),removeFile=(path,jobId)=>startJob(createJob({id:jobId,action:"FS",payload:{method:"unlink",args:[path]}})),FS=(method,args,jobId)=>startJob(createJob({id:jobId,action:"FS",payload:{method,args}})),loadLanguageInternal=(_langs,jobId)=>startJob(createJob({id:jobId,action:"loadLanguage",payload:{langs:_langs,options:{langPath:options.langPath,dataPath:options.dataPath,cachePath:options.cachePath,cacheMethod:options.cacheMethod,gzip:options.gzip,lstmOnly:[OEM$1.DEFAULT,OEM$1.LSTM_ONLY].includes(currentOem)&&!options.legacyLang}}})),initializeInternal=(_langs,_oem,_config,jobId)=>startJob(createJob({id:jobId,action:"initialize",payload:{langs:_langs,oem:_oem,config:_config}})),reinitialize=(langs2="eng",oem2,config2,jobId)=>{if(lstmOnlyCore&&[OEM$1.TESSERACT_ONLY,OEM$1.TESSERACT_LSTM_COMBINED].includes(oem2))throw Error("Legacy model requested but code missing.");const _oem=oem2||currentOem;currentOem=_oem;const _config=config2||currentConfig;currentConfig=_config;const _langs=(typeof langs2=="string"?langs2.split("+"):langs2).filter(x=>!currentLangs.includes(x));return currentLangs.push(..._langs),_langs.length>0?loadLanguageInternal(_langs,jobId).then(()=>initializeInternal(langs2,_oem,_config,jobId)):initializeInternal(langs2,_oem,_config,jobId)},setParameters=(params={},jobId)=>startJob(createJob({id:jobId,action:"setParameters",payload:{params}})),recognize2=async(image,opts={},output={text:!0},jobId)=>startJob(createJob({id:jobId,action:"recognize",payload:{image:await loadImage(image),options:opts,output}})),detect2=async(image,jobId)=>{if(lstmOnlyCore)throw Error("`worker.detect` requires Legacy model, which was not loaded.");return startJob(createJob({id:jobId,action:"detect",payload:{image:await loadImage(image)}}))},terminate=async()=>(worker!==null&&(terminateWorker(worker),worker=null),Promise.resolve());onMessage(worker,({workerId,jobId,status,action,data})=>{const promiseId=`${action}-${jobId}`;if(status==="resolve")log(`[${workerId}]: Complete ${jobId}`),promises[promiseId].resolve({jobId,data}),delete promises[promiseId];else if(status==="reject")if(promises[promiseId].reject(data),delete promises[promiseId],action==="load"&&workerResReject(data),errorHandler)errorHandler(data);else throw Error(data);else status==="progress"&&logger({...data,userJobId:jobId})});const resolveObj={id,worker,load,writeText,readText,removeFile,FS,reinitialize,setParameters,recognize:recognize2,detect:detect2,terminate};return loadInternal().then(()=>loadLanguageInternal(langs)).then(()=>initializeInternal(langs,oem,config)).then(()=>workerResResolve(resolveObj)).catch(()=>{}),workerRes};const createWorker$1=createWorker$2,recognize=async(image,langs,options)=>{const worker=await createWorker$1(langs,1,options);return worker.recognize(image).finally(async()=>{await worker.terminate()})},detect=async(image,options)=>{const worker=await createWorker$1("osd",0,options);return worker.detect(image).finally(async()=>{await worker.terminate()})};var Tesseract$2={recognize,detect},languages$1={AFR:"afr",AMH:"amh",ARA:"ara",ASM:"asm",AZE:"aze",AZE_CYRL:"aze_cyrl",BEL:"bel",BEN:"ben",BOD:"bod",BOS:"bos",BUL:"bul",CAT:"cat",CEB:"ceb",CES:"ces",CHI_SIM:"chi_sim",CHI_TRA:"chi_tra",CHR:"chr",CYM:"cym",DAN:"dan",DEU:"deu",DZO:"dzo",ELL:"ell",ENG:"eng",ENM:"enm",EPO:"epo",EST:"est",EUS:"eus",FAS:"fas",FIN:"fin",FRA:"fra",FRK:"frk",FRM:"frm",GLE:"gle",GLG:"glg",GRC:"grc",GUJ:"guj",HAT:"hat",HEB:"heb",HIN:"hin",HRV:"hrv",HUN:"hun",IKU:"iku",IND:"ind",ISL:"isl",ITA:"ita",ITA_OLD:"ita_old",JAV:"jav",JPN:"jpn",KAN:"kan",KAT:"kat",KAT_OLD:"kat_old",KAZ:"kaz",KHM:"khm",KIR:"kir",KOR:"kor",KUR:"kur",LAO:"lao",LAT:"lat",LAV:"lav",LIT:"lit",MAL:"mal",MAR:"mar",MKD:"mkd",MLT:"mlt",MSA:"msa",MYA:"mya",NEP:"nep",NLD:"nld",NOR:"nor",ORI:"ori",PAN:"pan",POL:"pol",POR:"por",PUS:"pus",RON:"ron",RUS:"rus",SAN:"san",SIN:"sin",SLK:"slk",SLV:"slv",SPA:"spa",SPA_OLD:"spa_old",SQI:"sqi",SRP:"srp",SRP_LATN:"srp_latn",SWA:"swa",SWE:"swe",SYR:"syr",TAM:"tam",TEL:"tel",TGK:"tgk",TGL:"tgl",THA:"tha",TIR:"tir",TUR:"tur",UIG:"uig",UKR:"ukr",URD:"urd",UZB:"uzb",UZB_CYRL:"uzb_cyrl",VIE:"vie",YID:"yid"},PSM$1={OSD_ONLY:"0",AUTO_OSD:"1",AUTO_ONLY:"2",AUTO:"3",SINGLE_COLUMN:"4",SINGLE_BLOCK_VERT_TEXT:"5",SINGLE_BLOCK:"6",SINGLE_LINE:"7",SINGLE_WORD:"8",CIRCLE_WORD:"9",SINGLE_CHAR:"10",SPARSE_TEXT:"11",SPARSE_TEXT_OSD:"12",RAW_LINE:"13"};const createScheduler=createScheduler$1,createWorker=createWorker$2,Tesseract=Tesseract$2,languages=languages$1,OEM=OEM$2,PSM=PSM$1,{setLogging}=log$2;var src={languages,OEM,PSM,createScheduler,createWorker,setLogging,...Tesseract};const Tesseract$1=getDefaultExportFromCjs(src),index=_mergeNamespaces({__proto__:null,default:Tesseract$1},[src]);export{commonjsRequire as c,index as i,src as s};
